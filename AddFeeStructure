package University_Management;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.sql.*;

public class AddFeeStructure implements ActionListener {
    JFrame frame;
    JLabel label1, label2, label3, label4, label5;
    JTextField textfield1, textfield2;
    JButton button1, button2;
    Choice choice1;

    AddFeeStructure() {
        frame = new JFrame("Add Fee Details");
        frame.setBackground(Color.WHITE);
        frame.setLayout(null);

        label1 = new JLabel();
        label1.setBounds(0, 0, 800, 560);
        label1.setLayout(null);

        ImageIcon image = new ImageIcon(ClassLoader.getSystemResource("University_Management/images/addfee.jpg"));
        Image image1 = image.getImage().getScaledInstance(230, 520, Image.SCALE_SMOOTH);
        ImageIcon image2 = new ImageIcon(image1);
        JLabel imageLabel = new JLabel(image2);
        imageLabel.setBounds(0, 0, 230, 520);
        label1.add(imageLabel);

        label2 = new JLabel("Add Fee Structure");
        label2.setBounds(300, 30, 300, 30);
        label2.setFont(new Font("Arial", Font.BOLD, 22));
        label2.setForeground(new Color(59, 25, 117));
        label1.add(label2);

        label3 = new JLabel("Semester Number");
        label3.setBounds(280, 100, 200, 30);
        label3.setFont(new Font("Arial", Font.BOLD, 18));
        label3.setForeground(new Color(59, 25, 117));
        label1.add(label3);

        choice1 = new Choice();
        choice1.setBounds(500, 100, 200, 30);
        choice1.setFont(new Font("Arial", Font.PLAIN, 16));
        label1.add(choice1);

        try {
            ConnectionClass object = new ConnectionClass();
            String query = "SELECT DISTINCT semester_name FROM semester";
            ResultSet rest = object.stm.executeQuery(query);
            while (rest.next()) {
                choice1.add(rest.getString("semester_name"));
            }
        } catch (Exception exception) {
            exception.printStackTrace();
        }

        label4 = new JLabel("Fee Per Semester");
        label4.setBounds(280, 160, 200, 30);
        label4.setFont(new Font("Arial", Font.BOLD, 18));
        label4.setForeground(new Color(59, 25, 117));
        label1.add(label4);

        textfield1 = new JTextField();
        textfield1.setFont(new Font("Arial", Font.PLAIN, 16));
        textfield1.setBounds(500, 160, 200, 30);
        label1.add(textfield1);

        label5 = new JLabel("Student ID");
        label5.setBounds(280, 220, 200, 30);
        label5.setFont(new Font("Arial", Font.BOLD, 18));
        label5.setForeground(new Color(59, 25, 117));
        label1.add(label5);

        textfield2 = new JTextField();
        textfield2.setFont(new Font("Arial", Font.PLAIN, 16));
        textfield2.setBounds(500, 220, 200, 30);
        label1.add(textfield2);

        button1 = new JButton("Add Fee Details");
        button1.setBounds(300, 300, 170, 40);
        button1.setBackground(Color.BLACK);
        button1.setForeground(Color.WHITE);
        button1.addActionListener(this);
        label1.add(button1);

        button2 = new JButton("Back");
        button2.setBounds(500, 300, 170, 40);
        button2.setBackground(new Color(88, 245, 174));
        button2.setForeground(Color.BLACK);
        button2.addActionListener(this);
        label1.add(button2);

        frame.add(label1);
        frame.setSize(800, 560);
        frame.setLocationRelativeTo(null);
        frame.setResizable(false);
        frame.setVisible(true);
    }

    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == button1) {
            String semester_no = choice1.getSelectedItem();
            String fee_details = textfield1.getText();
            String fee_id = textfield2.getText();

            if (fee_details.isEmpty() || fee_id.isEmpty()) {
                JOptionPane.showMessageDialog(null, "All fields are required");
                return;
            }

            try {
                int fee = Integer.parseInt(fee_details);
                if (fee > 12000) {
                    JOptionPane.showMessageDialog(null, "Fee amount should be less than 12000 Taka");
                } else if (fee < 1000) {
                    JOptionPane.showMessageDialog(null, "Fee amount should be greater than 1000 Taka");
                } else {
                    ConnectionClass object = new ConnectionClass();
                    String query = "INSERT INTO fee_structure VALUES('" + fee_id + "', '" + semester_no + "', '" + fee + "')";
                    object.stm.executeUpdate(query);
                    JOptionPane.showMessageDialog(null, "Fee added successfully");
                    frame.setVisible(false);
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Fee amount must be a numeric value");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

        if (e.getSource() == button2) {
            frame.setVisible(false);
        }
    }

    public static void main(String[] args) {
        new AddFeeStructure();
    }
}
